- hosts: test
  gather_facts: true
  #connection:
  vars:
    usermin: 1001
    usermax: 1250 
    gidbase: 2000
    uidbase: 2000
    JPHUB: /opt/jupyterhub
    CLEAN: false

  tasks: 
    - name: Ensure correct nproc soft limits
      become: yes
      become_user: root
      community.general.pam_limits:
        domain: jupyter
        limit_type: soft
        limit_item: nproc
        value: "800000"

    - name: Ensure correct nproc hard limits
      become: yes
      become_user: root
      community.general.pam_limits:
        domain: jupyter
        limit_type: hard
        limit_item: nproc
        value: "800000"

    - name: Ensure correct nofile soft limits
      become: yes
      become_user: root
      community.general.pam_limits:
        domain: jupyter
        limit_type: soft
        limit_item: nofile
        value: "65535"

    - name: Ensure correct nofile hard limits
      become: yes
      become_user: root
      community.general.pam_limits:
        domain: jupyter
        limit_type: hard
        limit_item: nofile
        value: "65535"

    - name: Setup sysctl params
      become: yes
      become_user: root
      ansible.posix.sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
        sysctl_set: yes
      with_items:
        - { key: "net.ipv4.tcp_keepalive_time", value: "1800" }
        - { key: "kernel.threads-max", value: "4096000" }
        - { key: "kernel.pid_max", value: "200000" }
        - { key: "vm.max_map_count", value: "600000" }

    - name: Setup firewall rules
      become: yes
      become_user: root
      community.general.ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      with_items:
        - "8000"
        - "443"
        - "80"

    - name: Ensure limits are correct for jupyter account
      lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: "{{ item }}"
      with_items:
        - "ulimit -u 641465"
        - "ulimit -n 65535"

    - name: Setup logind.conf
      become: yes
      become_user: root
      lineinfile:
        path: /etc/systemd/logind.conf
        line: UserTasksMax=100000
        state: present

    - name: Fix localhost entry in /etc/hosts
      become: yes
      become_user: root
      lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.0\.1'
        line: 127.0.0.1 localhost localhost.localdomain
        owner: root
        group: root
        mode: '0644'
        state: present

    - name: Ensure we have relevant entries in /etc/hosts
      become: yes
      become_user: root
      lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
        owner: root
        group: root
        mode: '0644'
        state: present
      with_items:
        - "16.31.85.200 jupyterhub.etc.fr.comm.hpecorp.net jupyterhub notebooks.hpedev.io notebooks"
        - "16.31.85.201 jupyterhub3.etc.fr.comm.hpecorp.net jupyterhub3 notebooks3.hpedev.io notebooks3"
        - "192.168.10.127 jupyterhub2.hp.local jupyterhub2 notebooks2.hpedev.io notebooks2"
        - "{{ REDFISHILO }}"
        - "{{ REDFISHOBMC }}"
        - "{{ HPEECPCTRL1 }}"
        - "{{ HPEECPCTRL2 }}"
        - "{{ HPEECPGW1 }}"
        - "{{ HPEECPGW2 }}"

    - name: Ensure that required packages are installed for repo setup
      become: yes
      become_user: root
      apt:
        pkg:
        - apt-transport-https

    - name: Update apt cache
      become: yes
      become_user: root
      apt:
        update_cache: yes
      changed_when: False

    - name: Add universe repository into sources list
      become: yes
      become_user: root
      apt_repository:
        repo: deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }}-security universe
        state: present

    - name: Add conda GPG Key to APT
      become: yes
      become_user: root
      apt_key:
        url: https://repo.anaconda.com/pkgs/misc/gpgkeys/anaconda.asc
        state: present

    - name: Add conda APT repository
      become: yes
      become_user: root
      apt_repository:
        repo: deb [arch=amd64] https://repo.anaconda.com/pkgs/misc/debrepo/conda stable main
        state: present

    - name: Add K8s GPG Key to APT
      become: yes
      become_user: root
      apt_key:
        url: https://packages.cloud.google.com/apt/doc//apt-key.gpg.asc
        state: present

    - name: Add K8s APT repository
      become: yes
      become_user: root
      apt_repository:
        #repo: deb https://apt.kubernetes.io/ kubernetes-{{ ansible_distribution_release }} main
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Update apt cache
      become: yes
      become_user: root
      apt:
        update_cache: yes
      changed_when: False

        #    - name: download additional packages are installed
        #get_url:
        #url: https://packages.microsoft.com/config/ubuntu/{{ ansible_distribution_version }}/packages-microsoft-prod.deb
        #dest: /tmp/packages-microsoft-prod.deb

    - name: Setup MicroSoft repo
      become: yes
      become_user: root
      apt:
        deb: https://packages.microsoft.com/config/ubuntu/{{ ansible_distribution_version }}/packages-microsoft-prod.deb

    - name: Ensure all required packages are installed
      become: yes
      become_user: root
      apt:
        pkg:
        - ansible 
        - python3 
        - python3-dev 
        - python3-pip 
        - python3-venv 
        - python3-jmespath 
        - python3-virtualenv 
        - git 
        - acl 
        - curl 
        - wget 
        - bzip2 
        - firefox 
        - jq 
        - httpie 
        - apt-file 
        - moreutils 
        - net-tools 
        - ldap-utils
        - nodejs
        - npm
        - pandoc
        - clang
        - cargo
        - cmake
        - default-jre
        - default-jdk
        - golang
        - texlive-xetex 
        - texlive-fonts-recommended 
        - texlive-latex-recommended
        - aspnetcore-runtime-3.1
        - dotnet-runtime-3.1
        - dotnet-sdk-3.1
        - software-properties-common
        - gnupg2 
        - postfix 
        - procmail 
        - conda 
        - kubectl 

    - name: Ensure all required node.js packages are installed
      become: yes
      become_user: root
      community.general.npm:
        name: "{{ item }}"
        global: yes
      with_items:
        - json
        - configurable-http-proxy

    - name: Remove a set of existing pip packages
      pip:
        name:
        - wheel 
        - jupyterhub 
        - jupyterlab 
        - nbconvert
        - pyhpecfm==0.1.6
        - hpeOneView
        - ipywidgets
        - ansible-kernel
        - bash_kernel
        - powershell_kernel
        state: absent
        virtualenv: "{{ JPHUB }}"
      when: CLEAN|bool

    - name: Remove directory "{{ JPHUB }}"
      become: yes
      become_user: root
      file:
        path: "{{ JPHUB }}"
        state: absent
      when: CLEAN|bool

    - name: Create directory "{{ JPHUB }}" if needed
      become: yes
      become_user: root
      file:
        path: "{{ JPHUB }}"
        state: directory
        owner: jupyter
        group: jupyter
        mode: 0750

    - name: install required pip packages
      pip:
        name:
        - wheel 
        - jupyterhub 
        - jupyterlab 
        - nbconvert
        - pyhpecfm==0.1.6
        - hpeOneView
        - ipywidgets
        - ansible-kernel
        - bash_kernel
        - powershell_kernel
        virtualenv: "{{ JPHUB }}"

    - name: Ensure jupyter kernels are installed
      command: python3 -m "{{ item }}.install"
      with_items:
        - bash_kernel
        - powershell_kernel
        - ansible_kernel
      changed_when: False

    - name: Test pwsh presence
      command: ls "{{ ansible_env.HOME }}/.dotnet/tools/pwsh"
      register: pwsh_path
      ignore_errors: true
      changed_when: false
    
    - name: Ensure powershell is installed through dotnet
      command: dotnet tool install -g powershell
      when: pwsh_path.rc != 0
    
    - name: Make pwsh available under /usr/local/bin with a symlink
      become: yes
      become_user: root
      file:
        src: "{{ ansible_env.HOME }}/.dotnet/tools/pwsh"
        dest: /usr/local/bin/pwsh
        owner: jupyter
        group: jupyter
        state: link
    
    - name: Ensure powershell scripts are installed
      command: "{{ ansible_env.HOME }}/jupyter-procmail/scripts/install_PwshModules.sh"
    
    - name: Ensure that directory "{{ JPHUB }}/etc/jupyterhub" exists
      file:
        path: "{{ JPHUB }}/etc/jupyterhub"
        state: directory
        owner: jupyter
        group: jupyter
        mode: 0750

    - name: Remove jupyterhub configuration file
      file:
        path: "{{ JPHUB }}/etc/jupyterhub/jupyterhub_config.py"
        state: absent

    - name: Generate jupyterhub configuration
      command: "{{ JPHUB }}/bin/jupyterhub --generate-config"
      args:
        chdir: "{{ JPHUB }}/etc/jupyterhub/"

    - name: Adapt jupyterhub configuration file
      blockinfile:
        path: "{{ JPHUB }}/etc/jupyterhub/jupyterhub_config.py"
        block: |
          #####################################################################################
          c.Authenticator.admin_users = {'jupyter'}
          c.Authenticator.whitelist = {'jupyter'}
          c.Spawner.default_url = '/lab'
          c.JupyterHub.tornado_settings = {'cookie_options': {'expires_days': 0.17}}
          c.JupyterHub.shutdown_on_logout = True
          c.JupyterHub.redirect_to_server = True
          #####################################################################################

    - name: Enable jupyterhub service 
      become: yes
      become_user: root
      systemd:
        state: started
        daemon_reload: yes
        enabled: yes
        name: jupyterhub

    - name: Ensure that directory /student exists
      become: yes
      become_user: root
      file: 
        path: "/student"
        state: directory
        owner: jupyter
        group: jupyter
        mode: 0711

    - name: Lockdown /home
      become: yes
      become_user: root
      file:
        path: "/home"
        state: directory
        owner: root
        group: root
        mode: 0711

    - name: Ensure that directory {{ ansible_env.HOME }}/.mail exists
      file:
        path: "{{ ansible_env.HOME }}/.mail"
        state: directory
        owner: jupyter
        group: jupyter
        mode: 0750

    - fail:
        msg: Stopping for now
        when: /bin/true
 
    - name: destroy existing student jupyter  users
      command: "curl -X DELETE --silent -k -H 'Authorization: token {{ admintoken }}' {{ jupyterhubapi }}/hub/api/users/{{ 'student%s' | format(item) }}"
      loop: "{{ range( usermin, usermax + 1)|list }}"

    - name: Remove Linux users and their home directory
      become: yes
      become_user: root
      user:
        name: "{{ 'student%s' | format(item) }}"
        state: absent
        remove: yes  
        force: yes
      loop: "{{ range( usermin, usermax + 1)|list }}"
      when: CLEAN|bool

    - name: Ensure dedicated students groups exist
      become: yes
      become_user: root
      group:
        name: "{{ 'student%s' | format(item) }}"
        state: present
        gid: "{{ item + gidbase }}"
      loop: "{{ range( usermin, usermax + 1)|list }}"

    - name: Ensure Linux students users exists with their home dir
      become: yes
      become_user: root
      user:
        name: "{{ 'student%s' | format(item) }}"
        state: present
        create_home: true
        home: "/student/{{ 'student%s' | format(item) }}"
        comment: "{{ 'student%s' | format(item) }}"
        shell: /bin/bash
        uid: "{{ item + uidbase }}"
        group: "{{ 'student%s' | format(item) }}"
      loop: "{{ range( usermin, usermax + 1)|list }}"
    
    - name: check that student home directory /student/student%$' exists
      become: yes
      become_user: root
      file:
        path: "/student/{{ 'student%s' | format(item) }}"
        state: directory
        owner: "{{ 'student%s' | format(item) }}"
        group: "{{ 'student%s' | format(item) }}"
        mode: 0700
      loop: "{{ range( usermin, usermax + 1)|list }}"
    
    - name: create  student jupyter  users
      command: "curl -X POST --silent -k -H 'Authorization: token {{ admintoken }}' {{ jupyterhubapi }}/hub/api/users/{{ 'student%s' | format(item) }}"
      loop: "{{ range( usermin, usermax + 1)|list }}"

    - name: Setup ACL for students with jupyter account
      become: yes
      become_user: root
      ansible.posix.acl:
        path: "/student/{{ 'student%s' | format(item) }}"
        recursive: yes
        entity: jupyter
        etype: user
        permissions: rwx
        state: present
      loop: "{{ range( usermin, usermax + 1)|list }}"

    - name: Setup default ACL for students with jupyter account
      become: yes
      become_user: root
      ansible.posix.acl:
        path: "/student/{{ 'student%s' | format(item) }}"
        recursive: yes
        entity: jupyter
        etype: user
        permissions: rwx
        default: yes
        state: present
      loop: "{{ range( usermin, usermax + 1)|list }}"

    - name: Setup ACL mask for students with jupyter account
      become: yes
      become_user: root
      ansible.posix.acl:
        path: "/student/{{ 'student%s' | format(item) }}"
        recursive: yes
        entity: jupyter
        etype: mask
        permissions: rwx
        state: present
        recalculate_mask: no_mask
      loop: "{{ range( usermin, usermax + 1)|list }}"

    - name: Setup default mask ACL for students with jupyter account
      become: yes
      become_user: root
      ansible.posix.acl:
        path: "/student/{{ 'student%s' | format(item) }}"
        recursive: yes
        entity: jupyter
        etype: mask
        permissions: rwx
        default: yes
        state: present
        recalculate_mask: no_mask
      loop: "{{ range( usermin, usermax + 1)|list }}"
