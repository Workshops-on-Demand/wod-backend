- hosts: all
  gather_facts: true

  tasks: 
    - name: Ensure correct nproc soft limits
      become: yes
      become_user: root
      community.general.pam_limits:
        domain: jupyter
        limit_type: soft
        limit_item: nproc
        value: "800000"

    - name: Ensure correct nproc hard limits
      become: yes
      become_user: root
      community.general.pam_limits:
        domain: jupyter
        limit_type: hard
        limit_item: nproc
        value: "800000"

    - name: Ensure correct nofile soft limits
      become: yes
      become_user: root
      community.general.pam_limits:
        domain: jupyter
        limit_type: soft
        limit_item: nofile
        value: "65535"

    - name: Ensure correct nofile hard limits
      become: yes
      become_user: root
      community.general.pam_limits:
        domain: jupyter
        limit_type: hard
        limit_item: nofile
        value: "65535"

    - name: Setup sysctl params
      become: yes
      become_user: root
      ansible.posix.sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
        sysctl_set: yes
      with_items:
        - { key: "net.ipv4.tcp_keepalive_time", value: "1800" }
        - { key: "kernel.threads-max", value: "4096000" }
        - { key: "kernel.pid_max", value: "200000" }
        - { key: "vm.max_map_count", value: "600000" }

    - name: Setup firewall rules
      become: yes
      become_user: root
      community.general.ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
        state: enabled
      with_items:
        - "8000"
        - "443"
        - "80"
        - "22"
        - "{{POSTPORT}}"

    - name: Ensure limits are correct for jupyter account
      lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: "{{ item }}"
      with_items:
        - "ulimit -u 641465"
        - "ulimit -n 65535"

    - name: Ensure vim is the default EDITOR
      lineinfile:
        path: "{{ ansible_env.HOME }}/.profile"
        line: export EDITOR=vim

    - name: Setup logind.conf
      become: yes
      become_user: root
      lineinfile:
        path: /etc/systemd/logind.conf
        line: UserTasksMax=100000
        state: present

    - name: Fix localhost entry in /etc/hosts
      become: yes
      become_user: root
      lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.0\.1'
        line: 127.0.0.1 localhost localhost.localdomain
        owner: root
        group: root
        mode: '0644'
        state: present

    - name: Ensure we have relevant entries in /etc/hosts
      become: yes
      become_user: root
      lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
        owner: root
        group: root
        mode: '0644'
        state: present
      with_items:
        - "{{ JPIP }} {{ JPHOST }} {{ JPHOST.split('.')[0] }}  {{ JPHOSTEXT }} {{ JPHOSTEXT.split('.')[0] }}"
        - "{{ REDFISHILO }}"
        - "{{ REDFISHOBMC }}"
        - "{{ HPEECPCTRL1 }}"
        - "{{ HPEECPCTRL2 }}"
        - "{{ HPEECPGW1 }}"
        - "{{ HPEECPGW2 }}"
        - "{{ LDAPSRV }}"

    - name: Ensure that required packages are installed for repo setup
      become: yes
      become_user: root
      apt:
        pkg:
        - apt-transport-https

    - name: Update apt cache
      become: yes
      become_user: root
      apt:
        update_cache: yes
      changed_when: False

    - name: Add universe repository into sources list
      become: yes
      become_user: root
      apt_repository:
        repo: deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }}-security universe
        state: present

    - name: Add conda GPG Key to APT
      become: yes
      become_user: root
      apt_key:
        url: https://repo.anaconda.com/pkgs/misc/gpgkeys/anaconda.asc
        state: present

    - name: Add conda APT repository
      become: yes
      become_user: root
      apt_repository:
        repo: deb [arch=amd64] https://repo.anaconda.com/pkgs/misc/debrepo/conda stable main
        state: present

    - name: Add K8s GPG Key to APT
      become: yes
      become_user: root
      apt_key:
        url: https://packages.cloud.google.com/apt/doc//apt-key.gpg.asc
        state: present

    - name: Add K8s APT repository
      become: yes
      become_user: root
      apt_repository:
        #repo: deb https://apt.kubernetes.io/ kubernetes-{{ ansible_distribution_release }} main
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Setup MicroSoft repo
      become: yes
      become_user: root
      apt:
        deb: https://packages.microsoft.com/config/ubuntu/{{ ansible_distribution_version }}/packages-microsoft-prod.deb

    - name: Update apt cache
      become: yes
      become_user: root
      apt:
        update_cache: yes
      changed_when: False

    - name: Ensure all required packages are installed
      become: yes
      become_user: root
      apt:
        pkg:
        - ansible 
        - python3 
        - python3-dev 
        - python3-pip 
        - python3-venv 
        - python3-jmespath 
        - python3-virtualenv 
        - git 
        - acl 
        - curl 
        - wget 
        - bzip2 
        - firefox 
        - jq 
        - httpie 
        - apt-file 
        - moreutils 
        - net-tools 
        - ldap-utils
        - nodejs
        - npm
        - vim
        - pandoc
        - clang
        - cargo
        - cmake
        - default-jre
        - default-jdk
        - golang
        - texlive-xetex 
        - texlive-fonts-recommended 
        - texlive-latex-recommended
        - aspnetcore-runtime-3.1
        - dotnet-runtime-3.1
        - dotnet-sdk-3.1
        - software-properties-common
        - gnupg2 
        - postfix 
        - procmail 
        - conda 
        - kubectl 

    - name: Ensure all required node.js packages are installed
      become: yes
      become_user: root
      community.general.npm:
        name: "{{ item }}"
        global: yes
      with_items:
        - json
        - configurable-http-proxy

    - name: Remove a set of existing pip packages
      pip:
        name:
        - wheel 
        - jupyterhub 
        - jupyterlab 
        - nbconvert
        - pyhpecfm==0.1.6
        - hpeOneView
        - ipywidgets
        - ansible-kernel
        - bash_kernel
        - powershell_kernel
        state: absent
        virtualenv: "{{ JPHUB }}"
      when: CLEAN|bool

    - name: Remove directory "{{ JPHUB }}"
      become: yes
      become_user: root
      file:
        path: "{{ JPHUB }}"
        state: absent
      when: CLEAN|bool

    - name: Create directory "{{ JPHUB }}" if needed
      become: yes
      become_user: root
      file:
        path: "{{ JPHUB }}"
        state: directory
        owner: jupyter
        group: jupyter
        mode: 0750

    - name: Ensure all required pip packages are installed
      pip:
        name:
        - wheel 
        - jupyterhub 
        - jupyterlab 
        - nbconvert
        - pyhpecfm==0.1.6
        - hpeOneView
        - ipywidgets
        - ansible-kernel
        - bash_kernel
        - powershell_kernel
        state: present
        virtualenv: "{{ JPHUB }}"

    - name: Ensure jupyter kernels are installed
      shell: . '{{ JPHUB }}/bin/activate' && python3 -m "{{ item }}.install"
      with_items:
        - bash_kernel
        - powershell_kernel
        - ansible_kernel
      changed_when: False

    - name: Test pwsh presence
      command: ls "{{ ansible_env.HOME }}/.dotnet/tools/pwsh"
      register: pwsh_path
      ignore_errors: true
      changed_when: false
    
    - name: Ensure powershell is installed through dotnet
      command: dotnet tool install -g powershell
      when: pwsh_path.rc != 0
    
    - name: Make pwsh available under /usr/local/bin with a symlink
      become: yes
      become_user: root
      file:
        src: "{{ ansible_env.HOME }}/.dotnet/tools/pwsh"
        dest: /usr/local/bin/pwsh
        owner: jupyter
        group: jupyter
        state: link
    
    - name: Ensure powershell scripts are installed
      command: "{{ SCRIPTDIR }}/install_PwshModules.sh"
    
    - name: Ensure that directory "{{ JPHUB }}/etc/jupyterhub" exists
      file:
        path: "{{ JPHUB }}/etc/jupyterhub"
        state: directory
        owner: jupyter
        group: jupyter
        mode: 0750

    - name: Remove jupyterhub configuration file
      file:
        path: "{{ JPHUB }}/etc/jupyterhub/jupyterhub_config.py"
        state: absent

    - name: Generate jupyterhub configuration
      command: "{{ JPHUB }}/bin/jupyterhub --generate-config"
      args:
        chdir: "{{ JPHUB }}/etc/jupyterhub/"

    - name: Adapt jupyterhub configuration file
      blockinfile:
        path: "{{ JPHUB }}/etc/jupyterhub/jupyterhub_config.py"
        block: |
          #####################################################################################
          c.Authenticator.admin_users = {'jupyter'}
          c.Authenticator.whitelist = {'jupyter'}
          c.Spawner.default_url = '/lab'
          c.JupyterHub.tornado_settings = {'cookie_options': {'expires_days': 0.17}}
          c.JupyterHub.shutdown_on_logout = True
          c.JupyterHub.redirect_to_server = True
          #####################################################################################

    - name: Copy jupyterhub service file 
      become: yes
      become_user: root
      copy:
        src: "{{ JUPPROC }}/jupyterhub.service"
        dest: /etc/systemd/system/jupyterhub.service

    - name: Enable Jupyterhub service 
      become: yes
      become_user: root
      systemd:
        state: started
        daemon_reload: yes
        enabled: yes
        name: jupyterhub

    - name: Ensure listening port in postfix master.cf is configured correctly
      become: yes
      become_user: root
      lineinfile:
        path: /etc/postfix/master.cf
        regex: '^smtp\s*inet'
        line: '{{ POSTPORT }}      inet  n       -       y       -       -       smtpd'
        state: present

    - name: Ensure myhostname in postfix main.cf is configured correctly
      become: yes
      become_user: root
      lineinfile:
        path: /etc/postfix/main.cf
        regex: '^myhostname ='
        line: "myhostname = {{ JPHOST }}"
        state: present

    - name: Ensure mydestination in postfix main.cf is configured correctly
      become: yes
      become_user: root
      lineinfile:
        path: /etc/postfix/main.cf
        regex: '^mydestination ='
        line: "mydestination = $myhostname, {{ JPHOST.split('.')[0] }}, {{ JPHOSTEXT }}, {{ JPHOSTEXT.split('.')[0] }}, localhost, localhost.localdomain"
        state: present

    - name: Deploy an instanciated procmailrc conf file
      template:
        src: "{{ JUPPROC }}/procmailrc.j2"
        dest: "{{ ansible_env.HOME }}/.procmailrc"
        mode: 0600

    - name: Deploy an instanciated procmail-action script
      template:
        src: "{{ SCRIPTDIR }}/procmail-action.sh.j2"
        dest: "{{ SCRIPTDIR }}/procmail-action.sh"
        mode: 0700

    - name: Deploy an instanciated test-action script
      template:
        src: "{{ SCRIPTDIR }}/test-action.sh.j2"
        dest: "{{ SCRIPTDIR }}/test-action.sh"
        mode: 0700

    - name: Enable postfix service 
      become: yes
      become_user: root
      systemd:
        state: started
        daemon_reload: yes
        enabled: yes
        name: postfix

    - name: Ensure that directory /student exists
      become: yes
      become_user: root
      file: 
        path: "/student"
        state: directory
        owner: jupyter
        group: jupyter
        mode: 0711

    - name: Lockdown /home
      become: yes
      become_user: root
      file:
        path: "/home"
        state: directory
        owner: root
        group: root
        mode: 0711

    - name: Ensure that directory {{ ansible_env.HOME }}/.mail exists
      file:
        path: "{{ ansible_env.HOME }}/.mail"
        state: directory
        owner: jupyter
        group: jupyter
        mode: 0750

        #    - name: Ensure that file vault_secret in {{ JUPPROC }}/ansible_jupyter/ exists 
        #copy:
        #dest: "{{ JUPPROC }}/ansible_jupyter/vault_secret"
        #content:
        #ceciestunmotdepassecompliquenomdenom!!!!!123      
        #owner: jupyter
        #group: jupyter
        #mode: 0750

   
    # For this to work, you need to have a key used in deploy key of the projects
    - name: Checkout notebooks from the jupyter-notebook git repo
      git:
        repo: git@github.com:HPEDevCom/jupyter-notebooks.git
        dest: "{{ ansible_env.HOME }}/student0"

    - name: Remove existing jupyter users
      command: 
        cmd: "curl -X DELETE --silent -k -H 'Authorization: token {{ JPHUBTOKEN }}' {{ JPHUBAPISRV }}/hub/api/users/{{ 'student%s' | format(item) }}"
        warn: false
      loop: "{{ range( USERMIN, USERMAX + 1)|list }}"
      when: CLEAN|bool

    - name: Remove Linux users and their home directory
      become: yes
      become_user: root
      user:
        name: "{{ 'student%s' | format(item) }}"
        state: absent
        remove: yes  
        force: yes
      loop: "{{ range( USERMIN, USERMAX + 1)|list }}"
      when: CLEAN|bool

    - name: Ensure dedicated students groups exist
      become: yes
      become_user: root
      group:
        name: "{{ 'student%s' | format(item) }}"
        state: present
        gid: "{{ item + GIDBASE }}"
      loop: "{{ range( USERMIN, USERMAX + 1)|list }}"

    - name: Ensure Linux students users exists with their home dir
      become: yes
      become_user: root
      user:
        name: "{{ 'student%s' | format(item) }}"
        state: present
        create_home: true
        home: "/student/{{ 'student%s' | format(item) }}"
        comment: "{{ 'student%s' | format(item) }}"
        shell: /bin/bash
        uid: "{{ item + UIDBASE }}"
        group: "{{ 'student%s' | format(item) }}"
      loop: "{{ range( USERMIN, USERMAX + 1)|list }}"
    
    - name: Ensure jupyter students users exist
      command: 
        cmd: "curl -X POST --silent -k -H 'Authorization: token {{ JPHUBTOKEN }}' {{ JPHUBAPISRV }}/hub/api/users/{{ 'student%s' | format(item) }}"
        warn: false
      loop: "{{ range( USERMIN, USERMAX + 1)|list }}"

    - name: Setup ACL for students with jupyter account
      become: yes
      become_user: root
      ansible.posix.acl:
        path: "/student/{{ 'student%s' | format(item) }}"
        recursive: yes
        entity: jupyter
        etype: user
        permissions: rwx
        state: present
      loop: "{{ range( USERMIN, USERMAX + 1)|list }}"

    - name: Setup default ACL for students with jupyter account
      become: yes
      become_user: root
      ansible.posix.acl:
        path: "/student/{{ 'student%s' | format(item) }}"
        recursive: yes
        entity: jupyter
        etype: user
        permissions: rwx
        default: yes
        state: present
      loop: "{{ range( USERMIN, USERMAX + 1)|list }}"
