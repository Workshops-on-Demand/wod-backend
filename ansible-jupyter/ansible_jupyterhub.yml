# Playbook expects to have a Student0 folder in the directory where the playbook is run
- hosts: jupyterhub
  gather_facts: true
  #connection:
  vars:
       usermin: 1001
       usermax: 1250 
       gidbase: 2000
       uidbase: 2000
       JPHUB: /opt/jupyterhub

  tasks: 
    - name: Ensure correct limits
      become: yes
      become_user: root
      lineinfile:
        path: /etc/security/limits.conf
        line: "{{ item }}"
        owner: root
        group: root
        mode: '0644'
      with_items:
        - "@jupyter soft nproc 64000"
        - "@jupyter hard nproc 64000"

    - name: Setup firewall rules
      become: yes
      become_user: root
      rule: allow
      port: "{{ item }}"
      proto: tcp
      with_items:
        - 8000
        - 443
        - 80

    - name: Replace a localhost entry with our own
      become: yes
      become_user: root
      lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.0\.1'
        line: 127.0.0.1 localhost localhost.localdomain
        owner: root
        group: root
        mode: '0644'

    - name: Ensure we have relevant entries in /etc/hosts
      become: yes
      become_user: root
      lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
        owner: root
        group: root
        mode: '0644'
      with_items:
        - "16.31.85.200 jupyterhub.etc.fr.comm.hpecorp.net jupyterhub notebooks.hpedev.io notebooks"
        - "16.31.85.201 jupyterhub3.etc.fr.comm.hpecorp.net jupyterhub3 notebooks3.hpedev.io notebooks3"
        - "192.168.10.127 jupyterhub2.etc.fr.comm.hpecorp.net jupyterhub2 notebooks2.hpedev.io notebooks2"
        - "{{ REDFISHILO }}"
        - "{{ REDFISHOBMC }}"
        - "{{ HPEECPCTRL1 }}"
        - "{{ HPEECPCTRL2 }}"
        - "{{ HPEECPGW1 }}"
        - "{{ HPEECPGW2 }}"

    - name: check that required packages are installed
      become: yes
      become_user: root
      apt:
        pkg:
        - apt-transport-https

    - name: Update apt cache
      become: yes
      become_user: root
      apt:
        update_cache: yes

    - name: Add universe repository into sources list
      become: yes
      become_user: root
      apt_repository:
        repo: deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }}-security universe
        state: present

    - name: Add ansible repository into sources list
      become: yes
      become_user: root
      apt_repository:
        repo: ppa:ansible/ansible
        state: present

    - name: Update apt cache
      become: yes
      become_user: root
      apt:
        update_cache: yes

    - name: check that required packages are installed
      become: yes
      become_user: root
      apt:
        pkg:
        - ansible 
        - python3 
        - python3-dev 
        - python3-pip 
        - python3-venv 
        - git 
        - curl 
        - wget 
        - bzip2 
        - firefox 
        - jq 
        - httpie 
        - python-jmespath 
        - apt-file 
        - sponge 
        - net-tools 
        - ldap-utils
        - nodejs
        - npm
        - pandoc
        - clang
        - cargo
        - cmake
        - default-jre
        - default-jdk
        - golang
        - texlive-xetex 
        - texlive-fonts-recommended 
        - texlive-generic-recommended
        - powershell
        - aspnetcore-runtime-3.1
        - dotnet
        - dotnet-runtime-3.1
        - dotnet-sdk-3.1
        - software-properties-common
        - certbot 
        - python-certbot-apache
        - gnupg2 
        - postfix 
        - procmail 

    - name: check that additional packages are installed
      become: yes
      become_user: root
      apt:
        pkg:
        - https://packages.microsoft.com/config/ubuntu/{{ ansible_distribution_version }}/packages-microsoft-prod.deb

    - name: check that directory "{{ JPHUB }}" exists
      become: yes
      become_user: root
      file:
        path: "{{ JPHUB }}"
        state: directory
        owner: jupyter
        group: jupyter
        mode: 0750

    - name: install required pip packages
      pip:
        virtualenv: "{{ JPHUB }}"
        name:
        - wheel 
        - jupyterhub 
        - jupyterlab 
        - nbconvert
        - pyhpecfm==0.1.6
        - hpeOneView
        - ipywidgets
        - ansible-kernel
        - bash_kernel
        - powershell_kernel
        - jupyterlab_iframe

    - name: Install required node.js package.
      become: yes
      become_user: root
      community.general.npm:
        name: "{{ item }}"
        global: yes
      with_items:
        - json
        - configurable-http-proxy

    - name: check that directory "{{ JPHUB }}/etc/jupyterhub" exists
      become: yes
      become_user: root
      file:
        path: "{{ JPHUB }}/etc/jupyterhub"
        state: directory
        owner: jupyter
        group: jupyter
        mode: 0750

    - name: Install jupyterhub systemd service file
      become: yes
      become_user: root
      file: 
        src: "{{ lookup('env','HOME') }}/ansible-jupyter/jupyterhub.service"
        dest: "/etc/systemd/system/jupyterhub.service"
        owner: jupyter
        group: jupyter
        mode: 0755

    - name: Enable jupyterhub service 
      become: yes
      become_user: root
      systemd:
        state: started
        daemon_reload: yes
        enabled: yes
        name: jupyterhub

    - name: check that directory /student exists
      become: yes
      become_user: root
      file: 
        path: "/student"
        state: directory
        owner: jupyter
        group: jupyter
        mode: 0711

    - name: check that directory /home/jupyter/student0 exists
      file:
        path: "/home/jupyter/student0"
        state: directory
        owner: jupyter
        group: jupyter
        mode: 0750

    - name: check that directory /home/jupyter/.mail exists
      file:
        path: "/home/jupyter/.mail"
        state: directory
        owner: jupyter
        group: jupyter
        mode: 0750
   
    - name: lockdown /home
      become: yes
      become_user: root
      file:
        path: "/home"
        state: directory
        owner: root
        group: root
        mode: 0711

 
    - name: destroy existing student jupyter  users
      command: "curl -X DELETE --silent -k -H 'Authorization: token {{ admintoken }}' {{ jupyterhubapi }}/hub/api/users/{{ 'student%s' | format(item) }}"
      loop: "{{ range( usermin, usermax + 1)|list }}"

    - name: Ansible delete linux user for studentx and its home directory
      become: yes
      become_user: root
      user:
        name: "{{ 'student%s' | format(item) }}"
        state: absent
        remove: yes  
        force: yes
      loop: "{{ range( usermin, usermax + 1)|list }}"

    - name: Ensure dedicated group studentx exists
      become: yes
      become_user: root
      group:
        name: "{{ 'student%s' | format(item) }}"
        state: present
        gid: "{{ item + gidbase }}"
      loop: "{{ range( usermin, usermax + 1)|list }}"


    - name: create student linux user for studentx and its home directory
      become: yes
      become_user: root
      user:
        name: "{{ 'student%s' | format(item) }}"
        state: present
        create_home: true
        home: "/student/{{ 'student%s' | format(item) }}"
        comment: "{{ 'student%s' | format(item) }}"
        shell: /bin/bash
        uid: "{{ item + uidbase }}"
        group: "{{ 'student%s' | format(item) }}"
      loop: "{{ range( usermin, usermax + 1)|list }}"
    
    - name: check that student home directory /student/student%$' exists
      become: yes
      become_user: root
      file:
        path: "/student/{{ 'student%s' | format(item) }}"
        state: directory
        owner: "{{ 'student%s' | format(item) }}"
        group: "{{ 'student%s' | format(item) }}"
        mode: 0700
      loop: "{{ range( usermin, usermax + 1)|list }}"
    
    - name: create  student jupyter  users
      command: "curl -X POST --silent -k -H 'Authorization: token {{ admintoken }}' {{ jupyterhubapi }}/hub/api/users/{{ 'student%s' | format(item) }}"
      loop: "{{ range( usermin, usermax + 1)|list }}"

    - name: setup ACL for studentx with jupyter account
      become: yes
      become_user: root
      ansible.posix.acl:
        path: "/student/{{ 'student%s' | format(item) }}"
        recursive: yes
        entity: jupyter
        etype: user
        permissions: rwx
        state: present
      loop: "{{ range( usermin, usermax + 1)|list }}"

    - name: setup default ACL for studentx with jupyter account
      become: yes
      become_user: root
      ansible.posix.acl:
        path: "/student/{{ 'student%s' | format(item) }}"
        recursive: yes
        entity: jupyter
        etype: user
        permissions: rwx
        default: yes
        state: present
      loop: "{{ range( usermin, usermax + 1)|list }}"

    - name: setup ACL mask for studentx with jupyter account
      become: yes
      become_user: root
      ansible.posix.acl:
        path: "/student/{{ 'student%s' | format(item) }}"
        recursive: yes
        entity: jupyter
        etype: mask
        permissions: rwx
        state: present
        recalculate_mask: no_mask
      loop: "{{ range( usermin, usermax + 1)|list }}"

    - name: setup default mask ACL for studentx with jupyter account
      become: yes
      become_user: root
      ansible.posix.acl:
        path: "/student/{{ 'student%s' | format(item) }}"
        recursive: yes
        entity: jupyter
        etype: mask
        permissions: rwx
        default: yes
        state: present
        recalculate_mask: no_mask
      loop: "{{ range( usermin, usermax + 1)|list }}"
