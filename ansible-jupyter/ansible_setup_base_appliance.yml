---
  - name: Ensure that common packages are installed for repo setup
    become: yes
    become_user: root
    package:
      pkg:
      - curl
      - gnupg2
      state: present
      update_cache: yes

  - name: Ensure that required packages are installed for repo setup
    become: yes
    become_user: root
    apt:
      pkg:
      - apt-transport-https
    when:
     - ansible_facts['os_family'] == "Debian"

  - name: Add universe repository into sources list
    become: yes
    become_user: root
    apt_repository:
      repo: deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }}-security universe
      state: present
    when:
     - ansible_facts['distribution'] == "Ubuntu"
     - ansible_facts['distribution_major_version'] == "20"

  - name: Add EPEL repository into repo list
    become: yes
    become_user: root
    yum:
      name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_facts['distribution_major_version'] }}.noarch.rpm"
      state: present
    when:
      - ansible_facts['distribution'] == "CentOS"

  - name: Update apt cache
    become: yes
    become_user: root
    apt:
      update_cache: yes
    changed_when: False
    when:
      - ansible_facts['os_family'] == "Debian"

  - name: Ensure all required packages are installed
    become: yes
    become_user: root
    package:
      pkg:
      - vim
      - ntp

  - name: Ensure that directory /student exists
    become: yes
    become_user: root
    file:
      path: "/student"
      state: directory
      owner: jupyter
      group: jupyter
      mode: 0711

  - name: Use USERMIN for APPMIN if installing
    set_fact:
      APPMIN: "{{ USERMIN }}"
    when: APPMIN is not defined

  - name: Use USERMAX for APPMAX if installing
    set_fact:
      APPMAX: "{{ USERMAX }}"
    when: APPMAX is not defined

  - name: No LDAPSETUP during install
    set_fact:
      LDAPSETUP: "0"
    when: LDAPSETUP is not defined

  - name: Remove Linux users and their home directory
    become: yes
    become_user: root
    user:
      name: "{{ 'student%s' | format(item) }}"
      state: absent
      remove: yes
      force: yes
    loop: "{{ range( APPMIN|int, APPMAX|int )|list }}"
    when: CLEAN|bool

  - name: Ensure dedicated students groups exist
    become: yes
    become_user: root
    group:
      name: "{{ 'student%s' | format(item) }}"
      state: present
      gid: "{{ item + GIDBASE }}"
    loop: "{{ range( APPMIN|int, APPMAX|int )|list }}"
    when: LDAPSETUP != "1"

  - name: Ensure Linux students users exists with their home dir
    become: yes
    become_user: root
    user:
      name: "{{ 'student%s' | format(item) }}"
      state: present
      create_home: true
      home: "/student/{{ 'student%s' | format(item) }}"
      comment: "{{ 'student%s' | format(item) }}"
      shell: /bin/bash
      uid: "{{ item + UIDBASE }}"
      group: "{{ 'student%s' | format(item) }}"
    loop: "{{ range( APPMIN|int, APPMAX|int )|list }}"
    when: LDAPSETUP != "1"

  - name: Configure LDAP client 1/3
    become: yes
    become_user: root
    template:
      src: "{{ JUPPROC }}/ldap.conf.j2"
      dest: /etc/ldap.conf
      owner: root
      group: root
      mode: 0644
    when: LDAPSETUP == "1"

  - name: Configure LDAP client 2/3
    become: yes
    become_user: root
    lineinfile:
      path: /etc/openldap/ldap.conf
      line: 'URI ldap://{{ LDAPSRVIP }}'
      state: present
    when: LDAPSETUP == "1"

  - name: Configure LDAP client 3/3
    become: yes
    become_user: root
    lineinfile:
      path: /etc/openldap/ldap.conf
      line: 'BASE {{ LDAPBASE }}'
      state: present
    when: LDAPSETUP == "1"

  - name: Configure nsswitch.conf for LDAP client 1/2
    become: yes
    become_user: root
    replace:
      path: /etc/nsswitch.conf
      # find ldap if any and remove it
      regex: '\bldap\b'
      replace: ''
      state: present
    with_items:
      - passwd
      - shadow
      - group
      - netgroup
      - automount
    when: LDAPSETUP == "1"

  - name: Configure nsswitch.conf for LDAP client 2/2
    become: yes
    become_user: root
    lineinfile:
      path: /etc/nsswitch.conf
      # force ldap on that line
      regex: '^({{ item }}):(\s+)(.+)$'
      backrefs: yes
      line: '\1:\2ldap \3'
      state: present
    with_items:
      - passwd
      - shadow
      - group
      - netgroup
      - automount
    when: LDAPSETUP == "1"

  - name: Ensure LDAP RPM required packages are installed
    become: yes
    become_user: root
    package:
      pkg:
      - nss-pam-ldapd
    when:
      - ansible_facts['distribution'] == "CentOS"
      - LDAPSETUP == "1"

  - name: Enable nslcd service
    become: yes
    become_user: root
    systemd:
      state: started
      daemon_reload: yes
      enabled: yes
      name: nslcd
    when: LDAPSETUP == "1"

  - name: Ensure Linux students users home dir exist
    become: yes
    become_user: root
    file:
      path: "/student/{{ 'student%s' | format(item) }}"
      owner: "{{ 'student%s' | format(item) }}"
      group: "{{ 'student%s' | format(item) }}"
      mode: 0750
      state: directory
    loop: "{{ range( APPMIN|int, APPMAX|int )|list }}"
    # Do it in all cases LDAP or not as mode needs to be confirmed for ssh login
