#!/bin/bash

cd {{ STUDDIR }}/student$stdid/$w
echo " This script resets the  WKSHP-HPECP-MLOPS  Workshop content for:" student$stdid
# associated to studentXY.
##
echo "Setting  environment variables to help cleanup"
#
#
studentId="student$stdid" 
password="$randompw" 

tenantname="K8sMLTenant" #case sensitive

# fixed environment variables setup by the HPE ECP lab administrator - Please DO NOT MODIFY!!

gateway_host="{{ HPEECPGWNAME }}"
controller_endpoint="${gateway_host}:8080"
Internet_access="{{ JPHOSTEXT }}"

echo "Your studentId is: "$studentId 
echo "your operation context is:" $studentId "on tenant" $tenantname 
echo "your REST API endpoint is:" $controller_endpoint


sc_secret="sc-secret-mlops-students.yaml" # The secret object for the GitHub VCS information. it is used by the notebook to know how to connect to the VCS.
JupyterNotebookApp="cr-cluster-mlops-jupyter-notebook.yaml" # the Jupyter Notebook ML Ops app manifest you will deploy to build your model
DeploymentEngineApp="cr-cluster-mlops-endpoint-wrapper.yaml" # the Deployment engine KD App manifest you will deploy to query your model for answers 
PipelineConfigMap="mlops-pipeline-configmap.yaml" # ConfigMap manifest used to register the trained model version 1 




## Authenticate as a Student ID in the specified tenant
sessionlocation=$(curl -k -i -s --request POST "https://${controller_endpoint}/api/v2/session" \
--header 'Accept: application/json' \
--header 'Content-Type: application/json' \
--data-raw '{
"name": "'"$studentId"'",
"password": "'"$password"'",
"tenant_name": "'"$tenantname"'"
}' | grep Location | awk '{print $2}' | tr -d '\r') #we remove any cr that might exist
echo "This is your session location: " $sessionlocation
SessionId=$(echo $sessionlocation | cut -d'/' -f 5) # extract sessionId for later, for logout
echo "This is your session_Id:" $SessionId

##Get the Kubeconfig file for your tenant working context
rm -f ~/.kube/config
curl -k -s --request GET "https://${controller_endpoint}/api/v2/k8skubeconfig" \
--header "X-BDS-SESSION: $sessionlocation" \
--header 'Accept: application/json' \
--header 'Content-Type: application/json' > ~/.kube/config

#Check your working tenant context
kubectl config current-context

kubectl delete -f $sc_secret
kubectl delete -f $DeploymentEngineApp
kubectl delete -f $PipelineConfigMap
kubectl delete -f $JupyterNotebookApp


#Closing the session
curl -k -i -s --request DELETE "https://${controller_endpoint}/api/v2/session/${SessionId}" \
--header "X-BDS-SESSION: $sessionlocation" \
--header 'Accept: application/json' \
--header 'Content-Type: application/json'
