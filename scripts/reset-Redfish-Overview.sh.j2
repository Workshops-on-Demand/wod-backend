#!/bin/bash

# This script resets the OpenBMC simulator in VM openbmcs2 (see /etc/hosts)
# associated to studentXY. 

# Args: One mandatory argument: studentXY

# Version: 0.2

# Variables
MyName="$(basename $0)"
NARGS=1
MinStud=96
MaxStud=150
ExpectedStudentString="student"
NumOfCharsInStudentString="${#StudentString}"
Workshop="$(echo $MyName | cut --complement -c 1-6)"
ScriptDir="/home/jupyter/jupyter-procmail/scripts/RESET-${Workshop}"
YmlConfiFile="${ScriptDir}/InfraConfig.yml" 

SED="`which sed` -i "
APB="$(which ansible-playbook) -i ${ScriptDir}/hosts" 

Student=$1
StudentString="$(echo $Student | cut -c 1-7)" 
let StudentNum="$(echo $Student | cut --complement -c 1-7)" 

# Functions
function Usage() {
	echo
	echo "Usage: "
	echo "$0 <student#>"
	echo "Where <student#> is the '$ExpectedStudentString' string concatenated with a student number"
	echo "The student number must be in the range [${MinStud}-${MaxStud}]"
	echo
}

# Checks
if [ $# -ne $NARGS ] ; then
   echo "Wrong number of arguments" ; echo
   Usage
   echo "Exiting...."
   echo
   exit 1
fi

# Student prefix string must be what in expected
if [ "$StudentString" != "$ExpectedStudentString" ] ; then
   echo "Wrong student string" ; echo
   Usage
   echo "Exiting..." 
   echo
   exit 2
fi


# StudentNum must be in range
if [ $StudentNum -lt $MinStud -o $StudentNum -gt $MaxStud ] ; then
	echo "Student number not in range" ; echo
	Usage
	echo "Exiting..." 
	echo
	exit 3
fi


# Build Ansible variables
capacity="$StudentNum"
myrange="${StudentNum}-{{capacity}}"

# Adjust variables in Ansible config file
$SED 's/\(^capacity: \).*$/\1'${capacity}'/; s/\(^myrange: \).*$/\1'${myrange}'/' $YmlConfiFile

# Kill Student Obmc
$APB ${ScriptDir}/KillStudentObmcs.yml

# Configure Student Obmcs
$APB ${ScriptDir}/ConfigureStudentObmcs.yml

# Start Obmc simulator
$APB ${ScriptDir}/StartStudentObmcs.yml &

# Sleep for a while to slow down the display of the system prompt.
sleep 2
echo
exit 0


